services:
  postgres:
    image: postgres:16
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: alumusic
    volumes:
      - postgres_data:/var/lib/postgresql/data
  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    entrypoint: >
      sh -c "
        /bin/ollama serve & 
        sleep 5 && apt-get update && apt-get install -y curl &&
        echo 'Aguardando Ollama iniciar...' &&
        until curl http://ollama:11434/api/tags; do sleep 5; done &&
        echo 'Ollama iniciado, carregando modelo...' &&
        ollama pull ${MODEL_NAME} &&
        echo 'Modelo carregado com sucesso!' &&
        wait
      "
  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app
    ports:
      - "5000:5000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - ollama
      - postgres
    environment:
      - DATABASE_URL=postgresql://admin:admin@postgres:5432/alumusic
    command: >
      sh -c "
        echo 'Iniciando Flask app...' &&
        gunicorn main:app -b 0.0.0.0:5000 -k gevent --timeout 300
      "

volumes:
  postgres_data:
  ollama_data:
